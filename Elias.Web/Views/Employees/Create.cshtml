@model Elias.DAL.Entities.Employee

@{
    ViewBag.Title = "Create Employee";
}

@section Breadcrumb {
    <ul class="breadcrumb">
		<li>
			<a href="@Url.Action("index", "home")">Dashboard</a>
		</li>
		<li>
			<a href="@Url.Action("index")">Employees</a>
		</li>
        <li class="active">
            <span>@ViewBag.Title</span>
        </li>
    </ul>
}

<h3>@ViewBag.Title</h3>
<hr />
<br />

@using (Html.BeginForm("create", "employees", FormMethod.Post, new { @class = "form form-horizontal" })) 
{   
    <div class="form-body">
	    @Html.AntiForgeryToken()
		<input type="hidden" name="returnUrl" value="@Html.ReturnUrl(Url.Action("index"))" />

		@Html.Partial("ValidationSummary", ViewData.ModelState)
        <div class="form-group">
            @Html.SCILabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.SCILabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.SCILabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.SCILabelFor(model => model.LeaveDays, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.SCIIntegerTextBoxFor(model => model.LeaveDays, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LeaveDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.SCILabelFor(model => model.SkypeId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.SkypeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SkypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.SCILabelFor(model => model.FacebookId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FacebookId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookId, "", new { @class = "text-danger" })
            </div>
        </div>
	</div>
    <div class="row">
		<div class="col-md-offset-3 col-md-9">
			<a href="@Html.ReturnUrl(Url.Action("index"))" class="btn btn-default">
                <i class="fa fa-long-arrow-left"></i>
                Back to List
            </a>
			<button type="submit" class="btn btn-success">
				Create
                <i class="fa fa-check"></i>
			</button>
        </div>
	</div>
}

